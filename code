import numpy as np
import tensorflow as tf
import matplotlib.pyplot as plt
import logging
import math
logger = logging.getLogger()
logger.setLevel(logging.ERROR)

C = np.array([-40, -10,  0,  8, 15, 22,  38],  dtype = float)
F = np.array([-40,  14, 32, 46, 59, 72, 100],  dtype = float)

l0 = tf.keras.layers.Dense(1, input_shape = [1])
model = tf.keras.Sequential([l0])

model = tf.keras.Sequential([tf.keras.layers.Dense(1, input_shape = [1])])
model.compile(loss = tf.keras.losses.mean_squared_error, optimizer = tf.keras.optimizers.Adam(0.1))
history = model.fit(C, F, epochs = 500, verbose = False)
model.predict([100])

plt.plot(history.history['loss'])
plt.xlabel('Epochs')
plt.ylabel('Loss in magnitude')

l0.get_weights()

l0 = tf.keras.layers.Dense(units=4, input_shape=[1])
l1 = tf.keras.layers.Dense(units=4)
l2 = tf.keras.layers.Dense(units=1)
model = tf.keras.Sequential([l0, l1, l2])
model.compile(loss='mean_squared_error', optimizer=tf.keras.optimizers.Adam(0.1))
model.fit(C, F, epochs=500, verbose=False)
print("Finished training the model")
print(model.predict([100.0]))
print("Model predicts that 100 degrees Celsius is: {} degrees Fahrenheit".format(model.predict([100.0])))
print("These are the l0 variables: {}".format(l0.get_weights()))
print("These are the l1 variables: {}".format(l1.get_weights()))
print("These are the l2 variables: {}".format(l2.get_weights()))
